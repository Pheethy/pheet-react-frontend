{"ast":null,"code":"var _jsxFileName = \"/Users/Macbook/Documents/Go/PJR/pheet-react-frontend/advance-web/src/components/AppLogIn.js\",\n  _s2 = $RefreshSig$();\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport \"./AppLogIn.css\";\nimport SuccessModal from \"./AppModal\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"http://127.0.0.1:8080/users/sign-in\";\nconst headers = {\n  \"Content-Type\": \"multipart/form-data\"\n};\nfunction LogIn() {\n  _s2();\n  var _s = $RefreshSig$(),\n    _errors$email,\n    _errors$password;\n  const {\n    handleSubmit,\n    register,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: \"onChange\"\n  });\n  const submitForm = e => {\n    const body = {\n      \"email\": e.email,\n      \"password\": e.password\n    };\n    const sendSignIn = async () => {\n      try {\n        const response = await axios.post(url, body, {\n          headers\n        });\n        console.log(response.data);\n        const data = response.data;\n        // Do something with the response data\n        localStorage.clear();\n        localStorage.setItem('jwtToken', data.user.token.access_token);\n        SuccessModal(true);\n        const signAPIKey = async () => {\n          try {\n            const token = \"Bearer \" + localStorage.getItem(\"jwtToken\");\n            const headers = {\n              Authorization: token\n            };\n            const resp = await axios.get(\"http://localhost:8080/info/apikey\", {\n              headers\n            });\n            const data = resp.data;\n            console.log(data.key);\n            localStorage.setItem('x-api-key', data.key);\n          } catch (err) {\n            console.error(err);\n          }\n        };\n        signAPIKey();\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    sendSignIn();\n  };\n  const YourComponent = () => {\n    _s();\n    const [successModalOpen, setSuccessModalOpen] = useState(false);\n    const closeSuccessModal = () => {\n      setSuccessModalOpen(false);\n    };\n  };\n  _s(YourComponent, \"C2srSLIP46IFD1QK01YmjfxTUOI=\");\n  console.log(errors);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Container\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit(submitForm),\n      className: \"Form-box\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        className: \"form-label\",\n        children: \"Log-in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"form-control\",\n          type: \"email\",\n          placeholder: \"Username\",\n          isInvalid: !!errors.email,\n          ...register(\"email\", {\n            required: \"email was required field.\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"form-control\",\n          type: \"password\",\n          placeholder: \"Password\",\n          isInvalid: !!errors.password,\n          ...register(\"password\", {\n            required: \"password was required field.\",\n            validate: v => v.length > 4 || \"password length must be greater than 4 charector\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        className: \"btn-submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SuccessModal, {\n        isOpen: successModalOpen,\n        onClose: closeSuccessModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s2(LogIn, \"APLE1gV/4Xh45wrW48lVbDw+gwQ=\", false, function () {\n  return [useForm];\n});\n_c = LogIn;\nexport default LogIn;\nvar _c;\n$RefreshReg$(_c, \"LogIn\");","map":{"version":3,"names":["Form","Button","useForm","SuccessModal","axios","jsxDEV","_jsxDEV","url","headers","LogIn","_s2","_s","$RefreshSig$","_errors$email","_errors$password","handleSubmit","register","formState","errors","mode","submitForm","e","body","email","password","sendSignIn","response","post","console","log","data","localStorage","clear","setItem","user","token","access_token","signAPIKey","getItem","Authorization","resp","get","key","err","error","YourComponent","successModalOpen","setSuccessModalOpen","useState","closeSuccessModal","className","children","onSubmit","Label","fileName","_jsxFileName","lineNumber","columnNumber","Group","controlId","Control","type","placeholder","isInvalid","required","Feedback","message","validate","v","length","variant","isOpen","onClose","_c","$RefreshReg$"],"sources":["/Users/Macbook/Documents/Go/PJR/pheet-react-frontend/advance-web/src/components/AppLogIn.js"],"sourcesContent":["import \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport \"./AppLogIn.css\";\nimport SuccessModal from \"./AppModal\";\nimport axios from \"axios\";\n\nconst url = \"http://127.0.0.1:8080/users/sign-in\";\nconst headers = {\n  \"Content-Type\": \"multipart/form-data\"\n};\n\nfunction LogIn() {\n  const {\n    handleSubmit,\n    register,\n    formState: { errors },\n  } = useForm({\n    mode: \"onChange\",\n  });\n\n\n  const submitForm = (e) => {\n    const body = {\n      \"email\": e.email,\n      \"password\": e.password\n    }\n    const sendSignIn = async () => {\n      try {\n        const response = await axios.post(url, body, { headers });\n        console.log(response.data);\n        const data = response.data\n        // Do something with the response data\n        localStorage.clear();\n        localStorage.setItem('jwtToken', data.user.token.access_token);\n        SuccessModal(true);\n        const signAPIKey = async () => {\n          try {\n            const token = \"Bearer \" + localStorage.getItem(\"jwtToken\");\n            const headers = {\n              Authorization: token,\n            };\n            const resp = await axios.get(\"http://localhost:8080/info/apikey\", {headers});\n            const data = resp.data;\n            console.log(data.key)\n            localStorage.setItem('x-api-key', data.key);\n          }\n          catch (err) {\n            console.error(err)\n          }\n        };\n        signAPIKey()\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    sendSignIn();\n  };\n\n  const YourComponent = () => {\n    const [successModalOpen, setSuccessModalOpen] = useState(false);\n    const closeSuccessModal = () => {\n      setSuccessModalOpen(false);\n    };\n  }\n\n  console.log(errors);\n  return (\n    <div className=\"Container\">\n        <Form onSubmit={handleSubmit(submitForm)} className=\"Form-box\">\n            <Form.Label className=\"form-label\">Log-in</Form.Label>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Control className=\"form-control\"\n              type=\"email\"\n              placeholder=\"Username\"\n              isInvalid={!!errors.email}\n              {...register(\"email\", { required: \"email was required field.\" })}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.email?.message}\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n            <Form.Control className=\"form-control\"\n              type=\"password\"\n              placeholder=\"Password\"\n              isInvalid={!!errors.password}\n              {...register(\"password\", {\n                required: \"password was required field.\",\n                validate: (v) =>\n                  v.length > 4 ||\n                  \"password length must be greater than 4 charector\",\n              })}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.password?.message}\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\" className=\"btn-submit\">\n            Login\n          </Button>\n          <SuccessModal isOpen={successModalOpen} onClose={closeSuccessModal} />\n        </Form>\n    </div>\n  );\n}\n\nexport default LogIn;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}